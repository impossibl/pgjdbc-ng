name: CI

on:
  push:
    branches:
    - develop
    - rel/v*
  pull_request:
    branches: [ develop ]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Checks
        run: ./gradlew checkstyleMain checkstyleTest

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        pg: [10, 11, 12, 13]
        jdk: [8, 11]
    runs-on: ${{ matrix.os }}
    needs: [check]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Setup PostgreSQL SSL Permissions
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          chmod 0400 ./driver/src/test/resources/certdir/server/server.key
          sudo chown 70:70 ./driver/src/test/resources/certdir/server/server.key
      - name: Build & Test
        run: ./gradlew --stacktrace -PpostgresVersions=${{ matrix.pg }} test -x checkstyleMain -x checkstyleTest

      - name: Updload Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/

  deploy:
    needs: [check, build]
    if: github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/rel/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish Maven Artifacts
        run: ./gradlew -PpostgresVersions=12 -PossrhUsername=${{ secrets.OSSRH_USERNAME }}  -PossrhPassword=${{ secrets.OSSRH_PASSWORD }} publish
      - name: Publish Documentation
        env:
          GRGIT_USER: kdubb
          GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew -PpostgresVersions=12 -PdocsRepoUri='https://github.com/impossibl/pgjdbc-ng.git' documentation:gitPublishPush
